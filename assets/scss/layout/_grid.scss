columns,
.columns{
  display: -webkit-flex;
  display: -ms-flex;
  display: flex;

  flex-direction: row;
  flex-wrap: wrap;

  margin: {
    left: -#{$gutter / 2};
    right: -#{$gutter / 2};
  }
}


.container{
  width: 100%;
  @include _margin(0, auto);
  @include _padding(0, $gutter);

  @each $breakpoint_name, $breakpoint_size in $breakpoints {

    @if $breakpoint_size > 0{
      @include media($breakpoint_name){
        max-width: $breakpoint_size - $gutter*2;
      }
    }
  }
}


%grid-column {
  position:       relative;
  width:          100%;
  min-height:     1px;
  padding: {
    left:         $gutter / 2;
    right:        $gutter / 2;
  }
}

@mixin create_grid($breakpoint_name, $columns: $grid_columns){

  @for $i from 1 through $columns {

    $width : 100%/$columns * $i;

    .column{
      &.#{$breakpoint_name}-#{$i}{
        max-width: $width;
        width: $width;
        flex: 0 0 $width;
      }
    }
  }
}

@if $create-grid-component {

  @each $breakpoint_name, $breakpoint_size in $breakpoints {

    @for $i from 1 through $grid_columns {
      .column{
        &.#{$breakpoint_name}-#{$i}{
          @extend %grid-column;
        }
      }
    }

    @if $breakpoint_size == 0{
      @include create_grid($breakpoint_name);
    } @else {
      @include media($breakpoint_name){
        @include create_grid($breakpoint_name);
      }
    }
  }
}
